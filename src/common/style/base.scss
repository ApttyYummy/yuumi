
/**
 * 基础盒子
 * @param $width [盒子宽度]
 * @param $height [盒子高度]
 * @param $background-color [盒子背景颜色]
 */
@mixin base-box($width, $height: $width, $background-color: null) {
    width: $width;
    height: $height;
    background-color: $background-color;
}

/**
 * 弹性盒子
 * @param $dir [排列方向] row: 横向排列 / column: 纵向排列
 * @param $align [align-items]
 * @param $justify-content [对齐方式]
 */
 @mixin flex-box($dir: row, $align: null, $justify-content: null, $flex-wrap: null) {
    display: -webkit-flex;
    display: flex;
    flex-direction: $dir;
    align-items: $align;
    justify-content: $justify-content;
    flex-wrap: $flex-wrap;
}

/**
 * 弹性盒子占位
 * @param $flex-grow [扩展比率]
 */
 @mixin flex-space($flex-grow) {
    flex-grow: $flex-grow;
}

/**
 * 设置盒子边框
 * @param $color [边框颜色]
 * @param $width [边框宽度]
 * @param $style [边框样式]
 * @param $dirs [边框方向]
 */
 @mixin set-border($color, $width: 1px, $style: solid, $dirs: null) {
    @if ($dirs) {
        @each $dir in $dirs {
            border-#{$dir}: $width $style $color;
        }
    } @else {
        border: $width $style $color;
    }
    box-sizing: border-box;
}

/**
 * 位置盒子   
 * @param $position [盒子位置]
 * @param $top [顶部偏移量]
 * @param $right [右边界偏移量]
 * @param $bottom [底部偏移量]
 * @param $left [左边界偏移量]
 */
@mixin locat-box($position, $top: null,  $right: null,  $bottom: null,  $left: null) {
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

/**
 * 设置字体  
 * @param $size [字体大小]
 * @param $line-height [字体行高] 
 * @param $color [字体颜色] 
 * @param $weight [字体粗细] 
 * @param $text-align [对齐方式] 
 */
@mixin set-font($size, $line-height, $color, $text-align: null, $weight: null) {
    font-size: $size;
    line-height: $line-height;
    color: $color;
    text-align: $text-align;
    font-weight: $weight;
    @include noselect;
}

/**
 * 设置Z轴  
 * @param $z-index [Z轴上堆叠顺序]
 * @param $position [盒子位置]  
 */
@mixin set-Z($z-index, $position: null) {
    z-index: $z-index;
    position: $position;
}

/**
 * 封装动画  
 * @param $animation-name [动画名称]
 */
@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}

/* 内核组 */
$cores: (
    '-webkit-',  /* Chrome / Safari */
    '-moz-',     /* Firefox */
    '-o-',       /* Opera */
    '-ms-',      /* Internet Explorer / Edge */
    '',          /* Non-prefixed version, currently not supported by any browser */
);

/**
 * 动画  
 * @param $options [动画配置]
 */
@mixin animation($options) {
    @each $core in $cores {
        #{$core}animation: $options;
    }
}

/**
 * transform  
 * @param $options [变换配置]
 */
@mixin transform($options) {
    @each $core in $cores {
        #{$core}transform: $options;
    }
}

/* 禁止选中 */
@mixin noselect {
    @each $core in $cores {
        #{$core}user-select: none;
    }
}

/* 过渡动画 */
.slide {
    &-left {
        &-enter-active {
            transition: all .4s ease;
        }
        &-leave-active {
            transition: all .4s cubic-bezier(1.0, 0.5, 0.8, 1.0);
        }
        &-enter, &-leave-to {
            transform: translateX(10px);
            opacity: 0;
        }
    }
    &-fade {
        &-enter-active {
            transition: all .4s ease;
        }
        &-leave-active {
            transition: all .4s cubic-bezier(1.0, 0.5, 0.8, 1.0);
        }
        &-enter, &-leave-to {
            transform: translateY(-5px);
            opacity: 0;
        }
    }
}

/* 测试用 */
.test-part {
    @include base-box(60px, 20px, #69F);
    @include set-font(12px, 20px, #FFF, center);
    border-radius: 20px;
}